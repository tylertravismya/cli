#
# Standard DevOps project creation options.  
#
# Pay close attention to parameters that require values unique  
# to you, such as those for Git, Docker, and AWS.
#
# To use Git, Docker, and any provider, be sure to have created
# an account with each.  
#
# For Git, before generating the project be sure to create the 
# repository and designate as public before
#

app:
    techstack:
       id:                LambdaNoSQL      # options: ASPNETCore, LambdaNoSQL, Lambda, Angular7MongoDB, Django, GoogleFunctions
                                           #          SparkMicroWeb, SpringCore, SpringMongoDB, Struts2, Apollo
                                           # To see the list of available tech stacks on a realMethods instance using command:
                                           #     realmethods_cli stack_list --output pretty

    model:
       identifier:		  4           # options:     Unique id of an existing model or 
                                      #              full or relative path to a model file of a supported type
                                      # model types: UML, Eclipse Modeling Framework, JSON, SQL Script, JAR, EAR
                                      # To see the list of available model on a realMethods instance using command:
                                      #      realmethods_cli model_list --output pretty
                                      #
                                      # If using a JAR/EAR file not already published, must include the package name
#      javaRootPackageName:   com.acme.pojo                                      
        	
#
# DevOps Project Creation Options
#    	
    options:

#            
# Application parameters
#            
    
        application:
            name:                  lambdamongodemo
            description:           Demo AWS Lambda-MongoDB application generated by realMethods
            author:                Dev Team
            email:                 xxxx.xxxxxxxxx@xxxxxxxx.com
            application logo URL:  ./img/turnstone.biologics.png
            company name:          Turnstone Biologics
            version:               0.0.1
            
                         
#            
# CI/CD parameters
#            
        cicd:
            platform:  codeship    # options: codeship, circleci, 
                                   # jenkins, azure, aws, gitlab, 
                                   # bitbucket, buddy, semaphore
            AES key:   xxxxx       # this is assigned per CodeShip project
            

#
# Git repository parameters
#
        git:            
            name:        git_test_LambdaNoSQL   # an arbitrary name
            username:    xxxxxxxxxxx
            password:    xxxxxxxxxxx
            repository:  LambdaMongoDB
            tag:         latest
            host:		 bitbucket.org            

#
# HashiCorp Terraform parameters
#
        terraform:
            inUse:             true	
            provider:          aws        # options: aws, google, azure, nutanix
            region:            us-east-1  # options: any cloud provider region
            ssh-fingerprint:   xxxxxx     # CircleCI requires this for SSH
            
            
#
# AWS and Lambda parameters
#
        aws-lambda:
            key-pair-name:     xxxxxxxxxxx
            access-key:        ASSIGN__ON_CICD_PLATFORM_AS_ENV_VARS
            secret-key:        ASSIGN__ON_CICD_PLATFORM_AS_ENV_VARS
            s3Bucket:          mys3bucket
            region:            us-east-1
            runtime:           java8				# options: java8,nodejs6.10,nodejs8.10
            useKinesis:        false
            kinesisStreamName: xxxxxxxxxx			# use with caution since billing charge will incur
            lambdaRoleArn:     xxxxxxxxxx           # ex: arn:aws:iam::xxxxxxxxxxx:role/service-role/myRoleName
            timeout:           30
            memorySize:        512
            forceUpdate:       true
            publish:           true
            vpcSubnetIds:
            vpcSecurityGroupIds: 
            delegateDAOHost:
            delegateDAOPort:
			

#            
# Swagger parameters - see https://swagger.io/docs/specification/2-0/basic-structure/ for valid options   
#
            
        swagger:
            host:              
            basepath:           /
            contactName:       realMethods Dev
            contactEmail:      dev@realmethods.com
            contactUrl:
            licenseUrl:        http://www.apache.org/licenses/LICENSE-2.0.html
            licenseName:       Apache 2.0
            title:              Lambda Functions Swagger
            version:            v1.0
            description:        Swagger file for Lambda Functions
            termsOfService:
            outputFormats:     json
            
#
# Nutanix parameters
#
        nutanix:
            inUse:         true
            userName:      xxxxxxxxxxxxx
            password:      xxxxxxxxxxxxx
            endpoint:      xxx.xxx.xxx.xxx
            insecure:      true
            port:          9440 # default port value
            clusterId:     xxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx
            email:         xxx@xxxx.com
            vmUserName:    xxxxxxxx
            vmPassword:    xxxxxxxx
            vmHost:        xxx.xxx.xxx.xxx
            vmOS:          linux # windows/linux options - windows not yet supported

#
# Kubernetes parameters: If not in use, and Terraform
#                        is in use, physical infrastructure
#                        will be provisioned on the provider
#
        kubernetes:
            inUse:              true
            host:               https://xxx.xxx.xxx.xxx
            project:            xxxxxxxxxxxxxxxxx
            region:             us-central1-a     # options: any provider region
            hostTarget:         google            # option: google, aws, azure, nutanix
            username:           admin
            password:           5UhfcIPAPsiPXklT  # value to assign
            exposeAsService:    true
            serviceType:        LoadBalancer      # options: LoadBalancer, NodePort, ClusterIP
            useSessionAffinity: true

            
#            
# Artifact repository for build dependencies and binaries            
#
        artifact-repo:
            inUse:              false
            type:				nexus                  # options: nexus, jfrog
            userName:           xxxxxxxx
            password:           xxxxxxxx
            email:              xxxx.xxxxxx@xxxxxxx.com
            repoUrl:            http://xxx.xxx.xxx.xxx:8081/repository/npm-public

            
#            
#  MongoDB parameters - defaults to a local accessible instance
#
#  If Terraform is in use, will attempt to instantiate a MongoDB instance via Docker image,
#  and use the instance IP address when binding the lambda functions    
#
        mongodb: 
            server address:          localhost:27017
            database name:           lambdamongodemo
            search size:             10
            default collection name: default_collection
            auto-increment id name:  _id
            auto-increment seq name: seq
            mongooseHost:            http://localhost
            mongoosePort:            4000        
      
